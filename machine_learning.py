from sklearn import tree
from sklearn.model_selection import train_test_split
import numpy as np


data = [[0.409, 0.518, 0.795, 0.5, 0.48038], [0.778, 0.205, 0.582, 0.5, 0.328772], [0.686, 0.671, 0.816, 0.650000006, 0.560076], [0.969, 0.538, 0.492, 0.349999994, 0.380544], [0.88, 0.655, 0.721, 0.299999997, 0.44008400000000003], [0.67, 0.286, 0.529, 0.6000000015, 0.567572], [0.501, 0.192, 0.63, 0.5, 0.447728], [0.722, 0.25, 0.727, 0.5, 0.519708], [0.933, 0.097, 0.359, 0.050000012, 0.419688], [0.111, 0.198, 0.367, 0.349999994, 0.330568], [0.974, 0.354, 0.495, 0.299999997, 0.398932], [0.692, 0.446, 0.621, 0.75, 0.5798719999999999], [0.33, 0.213, 0.479, 0.099999994, 0.591684], [0.585, 0.253, 0.676, 0.050000012, 0.5597559999999999], [0.275, 0.18, 0.492, 0.5, 0.37039999999999995], [0.425, 0.562, 0.701, 0.099999994, 0.540512], [0.574, 0.9, 0.62, 0.75, 0.326192], [0.46, 0.223, 0.658, 0.650000006, 0.459204], [0.42, 0.453, 0.568, 0.75, 0.31956], [0.868, 0.772, 0.67, 0.5, 0.388048], [0.869, 0.944, 0.596, 0.700000003, 0.439608], [0.876, 0.686, 0.502, 0.5500000005, 0.680252], [0.87, 0.462, 0.543, 0.5, 0.504076], [0.932, 0.544, 0.656, 0.75, 0.523744], [0.795, 0.293, 0.577, 0.650000006, 0.48803199999999997], [0.713, 0.544, 0.706, 0.299999997, 0.408148], [0.51, 0.45, 0.829, 0.700000003, 0.47997199999999995], [0.886, 0.88, 0.65, 0.5, 0.49605200000000005], [0.77, 0.488, 0.578, 0.5, 0.643448], [0.748, 0.6, 0.741, 0.700000003, 0.51186], [0.394, 0.382, 0.689, 0.4499999995, 0.46995600000000004], [0.833, 0.503, 0.473, 0.25, 0.628048], [0.33, 0.718, 0.861, 0.150000006, 0.380064], [0.573, 0.408, 0.695, 0.150000006, 0.39975599999999994], [0.894, 0.63, 0.426, 0.099999994, 0.43489999999999995], [0.734, 0.425, 0.822, 0.5, 0.391992], [0.394, 0.27, 0.695, 0.5500000005, 0.395932], [0.83, 0.453, 0.498, 0.25, 0.357368], [0.604, 0.181, 0.484, 0.5500000005, 0.413264], [0.656, 0.225, 0.638, 0.299999997, 0.416144], [0.302, 0.234, 0.389, 0.4499999995, 0.499824], [0.442, 0.212, 0.56, 0.5, 0.585792], [0.754, 0.425, 0.791, 0.5, 0.500056], [0.876, 0.941, 0.695, 0.099999994, 0.35981599999999997], [0.985, 0.606, 0.227, 0.099999994, 0.690904], [0.822, 0.962, 0.647, 0.5, 0.640076], [0.147, 0.0765, 0.407, 0.5, 0.565136], [0.939, 0.529, 0.671, 0.5, 0.516092], [0.452, 0.272, 0.645, 0.099999994, 0.5601119999999999], [0.178, 0.103, 0.532, 0.3999999985, 0.5995159999999999], [0.785, 0.943, 0.648, 0.150000006, 0.6400800000000001], [0.974, 0.965, 0.728, 0.3999999985, 0.318104], [0.871, 0.299, 0.81, 0.150000006, 0.349312], [0.833, 0.661, 0.466, 0.25, 0.35514], [0.716, 0.485, 0.453, 0.5, 0.76842], [0.709, 0.625, 0.7, 0.5, 0.488076], [0.83, 0.701, 0.667, 0.5, 0.45212], [0.609, 0.928, 0.856, 0.700000003, 0.45995199999999997], [0.459, 0.372, 0.804, 0.199999988, 0.447852], [0.324, 0.0965, 0.619, 0.5, 0.44770800000000005]]

values = [[1], [3], [1], [3], [0], [2], [1], [3], [3], [2], [3], [1], [2], [1], [2], [1], [0], [2], [1], [0], [0], [2], [3], [3], [0], [2], [1], [3], [1], [0], [1], [2], [1], [1], [3], [3], [1], [3], [2], [2], [2], [2], [0], [3], [3], [0], [2], [0], [2], [1], [0], [0], [3], [3], [0], [0], [0], [0], [1], [2]]

features = np.array(data)
labels = np.array(values)

X_train, X_test, y_train, y_test = train_test_split(
    features,
    labels,
    test_size=0.3,
    random_state=42,
)

clf = tree.DecisionTreeClassifier(max_depth=3, min_samples_leaf=5)
clf.fit(X=X_train, y=y_train)
y_pred = clf.predict(X_test)

accuracy = clf.score(X_test, y_test)

def prediction(song):
    return clf.predict([song])[0]
